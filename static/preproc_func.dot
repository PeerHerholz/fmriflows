digraph preproc_func{
  subgraph cluster_preproc_func {
      edge [color="#0000FF"];
      style=filled;
      fillcolor="#B4B4FF";
      motion_estimation[label="Estimate Motion\nParameter (FSL)", style=filled, fillcolor="#E6E6FF"];
      motion_parameters[label="Create New Motion\nParameters (Python)", style=filled, fillcolor="#E6E6FF"];
      slice_time[label="Slice Time\nCorrection (SPM)", style=filled, fillcolor="#E6E6FF"];
      apply_warp[label="Spatial Interpolation\n(C3D & ANTs)", style=filled, fillcolor="#E6E6FF"];
    subgraph cluster_prepareflow {
            edge [color="#FF0000"];
            style=filled;
            fillcolor="#FFB4B4";
            label=<<B>Prepare Workflow</B>>;
            prepareflow_reorient[label="Reorient Image (Nipye)", style=filled, fillcolor="#FFE6E6"];
            prepareflow_nss_detection[label="Non-Steady-State\nDetection (Nipype)", style=filled, fillcolor="#FFE6E6"];
            prepareflow_brain_extraction[label="Create Brain Mask\n(ANTs, FSL & Nilearn)", style=filled, fillcolor="#FFE6E6"];
            prepareflow_reorient -> prepareflow_nss_detection;
            prepareflow_reorient -> prepareflow_brain_extraction;
    }
    subgraph cluster_coregflow {
            edge [color="#FF0000"];
            style=filled;
            fillcolor="#FFB4B4";
            label=<<B>Coregistration Workflow</B>>;
            coregflow_coreg_pre[label="Initial Coregistration\n(FSL)", style=filled, fillcolor="#FFE6E6"];
            coregflow_coreg_bbr[label="WM Boundary-Based\nRegistration (FSL)", style=filled, fillcolor="#FFE6E6"];
            coregflow_coreg_pre -> coregflow_coreg_bbr;
    }
    subgraph cluster_filterflow {
            edge [color="#FF0000"];
            style=filled;
            fillcolor="#FFB4B4";
            label=<<B>Filter Workflow</B>>;
            filterflow_warp_masks[label="Warped Brain Masks\n(ANTs, FSL & Nilearn)", style=filled, fillcolor="#FFE6E6"];
            filterflow_temporal_filter[label="Temporal Filter\n(AFNI & Nilearn)", shape=box3d,style=filled, color=black, colorscheme=greys7, fillcolor=2];
            filterflow_spatial_filter[label="Spatial Filter (Nilearn)", shape=box3d,style=filled, color=black, colorscheme=greys7, fillcolor=2];
            filterflow_warp_masks -> filterflow_temporal_filter;
            filterflow_temporal_filter -> filterflow_spatial_filter;
    }
    motion_parameters -> slice_time [color="#00000000"];
    prepareflow_reorient -> motion_estimation;
    prepareflow_brain_extraction -> motion_estimation;
    prepareflow_nss_detection -> motion_estimation;
    prepareflow_reorient -> slice_time;
    motion_estimation -> coregflow_coreg_pre;
    motion_estimation -> coregflow_coreg_bbr;
    motion_estimation -> motion_parameters;
    motion_parameters -> apply_warp;
    slice_time -> apply_warp;
    coregflow_coreg_bbr -> apply_warp;
    prepareflow_nss_detection -> apply_warp;
    apply_warp -> filterflow_warp_masks;
  }
}


